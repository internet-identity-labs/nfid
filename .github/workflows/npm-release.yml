name: Dispatch NPM release

permissions:
  contents: "write"

on:
  workflow_dispatch:
    inputs:
      package:
        type: choice
        description: "Package to release"
        required: true
        options:
          - "identity-kit"
          - "postmessage-rpc"
          - "vaults"

      level:
        type: choice
        description: Select the release update level
        options:
          - major
          - minor
          - patch
          - prepatch
          - preminor
          - premajor
          - prerelease
      preid:
        type: choice
        required: false
        description: Select pre-id (alpha | beta)
        default: "none"
        options:
          - alpha
          - beta

env:
  PACKAGE: ${{ github.event.inputs.package }}
  LEVEL: ${{ github.event.inputs.level }}
  PREID: ${{ github.event.inputs.preid }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.NFID_GITHUB_ACTION_GPG_KEY }}
          passphrase: ${{ secrets.NFID_GITHUB_ACTION_GPG_KEY_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: ðŸ”§ Git
        run: |
          git config user.email "nfid-github-action@identitylabs.ooo"
          git config user.name "NFID Github Action"

      - name: ðŸ”§ Node
        uses: actions/setup-node@v4
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - name: ðŸ”§ Yarn
        run: |
          npx yarn config set version-git-message "chore(${PACKAGE}): release v%s"
          npx yarn config set version-tag-prefix "@nfid/${PACKAGE}-v"

      - name: ðŸ¤– Install
        run: npm i --frozen-lockfile

      - name: ðŸ¤– Increment package version
        working-directory: packages/${{ github.event.inputs.package }}
        run: |
          if [[ "${LEVEL}" == "pre"* ]]; then
            npx yarn version --${LEVEL} --preid ${PREID}
          else
            npx yarn version --${LEVEL}
          fi

      - name: ðŸ¤– Build
        run: npm run build-package @nfid/${PACKAGE}

      # - name: ðŸ“¦ Publish package on NPM
      #   working-directory: packages/${{ github.event.inputs.package }}
      #   run: npx yarn publish --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.IL_GH_NPM_TOKEN }}

      - name: Prepare version
        run: |
          TAG="v$( date +%s-%Y%m%d%H%M%S )"
          echo "TAG=${TAG}" >&2
          echo "TAG=${TAG}" >> $GITHUB_ENV


      - name: ðŸŽ‰ Push tags
        run: |
          git tag ${TAG}
          git push --tags

      # - name: Create Tag
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       const {TAG} = process.env          
      #       github.rest.git.createRef({
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           ref: `refs/tags/${TAG}`,
      #           sha: context.sha
      #       })
